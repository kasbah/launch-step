#!/usr/bin/env node
const midi          = require('midi')
const midiLaunchpad = require('midi-launchpad')
const argv          = require('argv')
const {red, green, orange, yellow, off} = midiLaunchpad.colors
const StepSequencer = require('step-sequencer')

const args = argv.option([
    {
        name: 'tempo',
        short: 't',
        type: 'string',
        description: 'Tempo in beats per minute. The default is 120. Can be set to "ext" to use an external midi clock signal.',
        example: "launch-step --tempo 133.2"
    },
    {
        name: 'steps',
        short: 's',
        type: 'int',
        description: 'Number of steps in the sequence. The default is 8.',
        example: "launch-step --steps 12"
    },
]).run()

const connection = midiLaunchpad.connect(undefined, false)

const options = {tempo: 10, steps: 8}

const stepArray = Array(8).fill().map(() => Array(options.steps).fill(0))
const drawArray = Array(9).fill().map(() => "000000000")

const stepSequencer = new StepSequencer(options.tempo, options.steps, stepArray)

connection.on('ready', launchpad => {

    stepArray.forEach((values, index) => {
        stepSequencer.on(index, a => {
            const draw = drawArray.map((s, i) => {
                if (i > 7) {
                    return s
                }
                return s.slice(0, index) + 'y' + s.slice(index + 1)
            })
            launchpad.renderBytes(draw)
        })
    })

    launchpad.on('press', button => {
        if(button.getState() !== off) {
            button.light(off)
        } else {
            button.light(green.high)
        }
    })

    stepSequencer.play()

})

